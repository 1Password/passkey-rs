on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: CI

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: clippy
      - run: rustup run ${{ matrix.rust }} cargo clippy --all --all-targets --all-features -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        rust:
          # Once we settle on a MSRV we should add that here.
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - run: rustup run ${{ matrix.rust }} cargo fmt --all -- --check

  semver-checks:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2

  docs:
    name: Documentation
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - run: RUSTDOCFLAGS="-D warnings " rustup run ${{ matrix.rust }} cargo doc --workspace --no-deps --all-features

  test:
    name: Test
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        rust:
          # Once we settle on a MSRV we should add that here.
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
      - run: rustup run ${{ matrix.rust }} cargo test

  typeshare:
    name: Typeshare
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        rust:
          - stable
        lang:
          - typescript
          - kotlin
          - swift
        include:
          - fs: ts
            lang: typescript
          - fs: kt
            lang: kotlin
          - fs: swift
            lang: swift
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/install@v0.1
        with:
          crate: typeshare-cli
          version: "1.11.0"
      - run: typeshare --lang=${{ matrix.lang }} . -o test.${{ matrix.fs }}
