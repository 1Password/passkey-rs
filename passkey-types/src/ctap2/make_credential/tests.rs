#[test]
fn windows_sanity_test() {
    // Note that this CBOR is incorrect, it encodes PublicKeyCredentialDescriptor::transport as
    // an integer rather than an array of strings.
    // This test should stay in place until Microsoft fixes this in _hopefully_ their second
    // version of the API
    let raw_cbor = [
        167, 1, 88, 32, 15, 182, 44, 101, 156, 230, 202, 214, 145, 124, 211, 35, 25, 79, 66, 233,
        132, 163, 144, 124, 208, 29, 114, 112, 109, 213, 99, 107, 75, 218, 37, 59, 2, 162, 98, 105,
        100, 107, 119, 101, 98, 97, 117, 116, 104, 110, 46, 105, 111, 100, 110, 97, 109, 101, 107,
        119, 101, 98, 97, 117, 116, 104, 110, 46, 105, 111, 3, 163, 98, 105, 100, 79, 119, 101, 98,
        97, 117, 116, 104, 110, 105, 111, 45, 116, 101, 115, 116, 100, 110, 97, 109, 101, 100, 116,
        101, 115, 116, 107, 100, 105, 115, 112, 108, 97, 121, 78, 97, 109, 101, 100, 116, 101, 115,
        116, 4, 131, 162, 99, 97, 108, 103, 39, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108,
        105, 99, 45, 107, 101, 121, 162, 99, 97, 108, 103, 38, 100, 116, 121, 112, 101, 106, 112,
        117, 98, 108, 105, 99, 45, 107, 101, 121, 162, 99, 97, 108, 103, 57, 1, 0, 100, 116, 121,
        112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 5, 146, 163, 98, 105, 100,
        80, 0, 0, 121, 142, 247, 71, 69, 21, 217, 195, 121, 168, 206, 165, 74, 240, 100, 116, 121,
        112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115,
        112, 111, 114, 116, 115, 24, 55, 163, 98, 105, 100, 88, 48, 19, 255, 63, 107, 37, 18, 68,
        8, 21, 167, 2, 1, 31, 44, 107, 99, 32, 243, 155, 9, 78, 95, 139, 163, 83, 234, 130, 209,
        204, 20, 190, 203, 83, 131, 59, 175, 225, 196, 114, 212, 202, 248, 213, 201, 154, 17, 27,
        31, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116,
        114, 97, 110, 115, 112, 111, 114, 116, 115, 1, 163, 98, 105, 100, 84, 27, 229, 206, 95,
        193, 37, 98, 16, 94, 96, 237, 2, 97, 168, 142, 68, 171, 39, 142, 106, 100, 116, 121, 112,
        101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112,
        111, 114, 116, 115, 16, 163, 98, 105, 100, 88, 32, 48, 128, 192, 242, 186, 166, 254, 92,
        130, 138, 1, 191, 122, 172, 91, 106, 16, 83, 153, 88, 175, 77, 141, 116, 255, 1, 143, 127,
        123, 109, 151, 36, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101,
        121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 16, 163, 98, 105, 100, 80, 59,
        127, 166, 104, 193, 74, 127, 86, 199, 255, 176, 149, 163, 81, 145, 209, 100, 116, 121, 112,
        101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112,
        111, 114, 116, 115, 24, 48, 163, 98, 105, 100, 80, 69, 218, 105, 186, 25, 115, 70, 194,
        159, 59, 237, 119, 8, 234, 102, 217, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105,
        99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 16, 163, 98,
        105, 100, 88, 48, 71, 99, 246, 237, 4, 130, 196, 125, 143, 159, 70, 168, 93, 68, 122, 248,
        60, 213, 213, 98, 58, 92, 166, 175, 87, 75, 106, 229, 62, 230, 30, 193, 137, 182, 211, 239,
        143, 156, 237, 247, 12, 117, 220, 141, 182, 233, 38, 119, 100, 116, 121, 112, 101, 106,
        112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114,
        116, 115, 1, 163, 98, 105, 100, 80, 73, 35, 199, 111, 212, 47, 108, 38, 32, 200, 181, 60,
        253, 237, 219, 245, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101,
        121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 48, 163, 98, 105, 100, 88,
        48, 93, 172, 110, 156, 65, 75, 99, 208, 21, 225, 59, 180, 12, 148, 17, 96, 27, 81, 46, 65,
        88, 238, 94, 92, 140, 199, 118, 178, 133, 117, 1, 218, 185, 45, 229, 255, 122, 74, 169,
        243, 31, 105, 11, 15, 228, 147, 249, 58, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108,
        105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 55,
        163, 98, 105, 100, 84, 101, 104, 90, 85, 213, 224, 231, 128, 187, 141, 152, 220, 37, 52,
        79, 189, 15, 78, 150, 230, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45,
        107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 48, 163, 98, 105,
        100, 80, 105, 176, 13, 15, 114, 73, 64, 244, 163, 141, 168, 210, 223, 168, 62, 61, 100,
        116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97,
        110, 115, 112, 111, 114, 116, 115, 16, 163, 98, 105, 100, 88, 83, 163, 0, 88, 47, 197, 68,
        66, 241, 239, 99, 185, 235, 27, 81, 212, 83, 65, 106, 101, 254, 123, 223, 194, 141, 73, 24,
        182, 245, 122, 92, 124, 240, 214, 116, 189, 9, 187, 153, 57, 197, 115, 206, 68, 149, 138,
        28, 224, 105, 238, 133, 126, 1, 76, 85, 97, 130, 159, 26, 236, 148, 108, 55, 69, 70, 71, 2,
        80, 195, 133, 224, 172, 35, 227, 161, 234, 64, 72, 148, 145, 47, 254, 76, 105, 100, 116,
        121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110,
        115, 112, 111, 114, 116, 115, 1, 163, 98, 105, 100, 88, 70, 166, 25, 80, 173, 6, 191, 188,
        181, 21, 124, 27, 193, 122, 173, 107, 16, 59, 181, 171, 185, 17, 204, 236, 16, 235, 42,
        253, 116, 230, 120, 17, 44, 174, 185, 116, 166, 234, 146, 19, 201, 156, 47, 116, 178, 36,
        146, 179, 32, 207, 64, 38, 42, 148, 193, 169, 80, 160, 57, 127, 41, 37, 11, 96, 132, 30,
        240, 49, 3, 0, 0, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101,
        121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 55, 163, 98, 105, 100, 84,
        177, 103, 177, 241, 198, 64, 210, 95, 49, 252, 199, 138, 177, 154, 146, 160, 157, 250, 37,
        173, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116,
        114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 48, 163, 98, 105, 100, 88, 48, 185, 140,
        97, 253, 96, 253, 147, 233, 0, 236, 230, 67, 211, 226, 44, 9, 152, 122, 222, 132, 44, 213,
        116, 95, 173, 55, 193, 56, 189, 101, 72, 85, 66, 82, 214, 156, 205, 128, 90, 219, 131, 52,
        127, 179, 121, 31, 207, 221, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45,
        107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 1, 163, 98, 105, 100,
        80, 208, 37, 4, 120, 137, 20, 67, 27, 169, 237, 199, 211, 145, 131, 154, 198, 100, 116,
        121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110,
        115, 112, 111, 114, 116, 115, 16, 163, 98, 105, 100, 80, 231, 178, 48, 54, 239, 209, 52,
        190, 140, 31, 164, 89, 166, 253, 249, 121, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108,
        105, 99, 45, 107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 48,
        163, 98, 105, 100, 84, 235, 117, 250, 174, 246, 81, 234, 78, 173, 196, 120, 89, 223, 51,
        197, 140, 133, 68, 129, 85, 100, 116, 121, 112, 101, 106, 112, 117, 98, 108, 105, 99, 45,
        107, 101, 121, 106, 116, 114, 97, 110, 115, 112, 111, 114, 116, 115, 24, 48, 6, 161, 107,
        99, 114, 101, 100, 80, 114, 111, 116, 101, 99, 116, 2, 7, 161, 98, 114, 107, 245,
    ];
    let request: super::Request =
        ciborium::from_reader(raw_cbor.as_slice()).expect("failed to deserialize");

    let exclude_list = request
        .exclude_list
        .expect("There should be an exclude list");
    let first = exclude_list
        .first()
        .expect("There should be at least one entry");
    assert!(first.transports.is_none())
}
